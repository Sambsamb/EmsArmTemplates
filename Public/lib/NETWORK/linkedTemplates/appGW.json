{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetwork": {
            "type": "string"
        },
        "appGW_Name": {
            "type": "string"
        },
        "appGW_domainNameLabel": {
            "type": "string"
        },
        "appGW_tier": {
            "type": "string"
        },
        "appGW_Size": {
            "type": "string"
        },
        "appGW_capacity": {
            "type": "int"
        },
        "appGW_subnetName": {
            "type": "string"
        },
        "appGW_publicIpAddressName": {
            "type": "string"
        },
        "appGW_backendIPAddresses": {
            "type": "array"
        },
        "appGW_allocationMethod": {
            "type": "string"
        },
        "appGW_idleTimeoutInMinutes": {
            "type": "int"
        },
        "appGW-certData": {
            "type": "string"
        },
        "appGW_certPassword": {
            "type": "string"
        },
        "ApplicationName": {
            "type": "string"
        },
        "uai": {
            "type": "string"
        },
        "SupportEmail": {
            "type": "string"
        },
        "env": {
            "type": "string"
        },
        "preserve": {
            "type": "bool"
        }
    },
    "variables": {
        "vnetId": "[resourceId(resourcegroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetwork'))]",
        "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('appGW_publicIpAddressName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('appGW_subnetName'))]",
        "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', parameters('appGW_Name'))]",
        "probeid": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/applicationGateways/',parameters('appGW_Name'),'/probes/nginx-probe')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/applicationGateways",
            "name": "[parameters('appGW_Name')]",
            "apiVersion": "2018-08-01",
            "location": "[resourcegroup().location]",
            "tags": {
                "ApplicationName": "[parameters('ApplicationName')]",
                "uai": "[parameters('uai')]",
                "SupportEmail": "[parameters('SupportEmail')]",
                "env": "[parameters('env')]",
                "preserve": "[parameters('preserve')]"
            },
            "properties": {
                "sku": {
                    "name": "[parameters('appGW_Size')]",
                    "tier": "[parameters('appGW_tier')]",
                    "capacity": "[parameters('appGW_capacity')]"
                },
                "sslCertificates": [
                    {
                        "name": "appGatewaySslCert",
                        "properties": {
                            "data": "[parameters('appGW-certData')]",
                            "password": "[parameters('appGW_certPassword')]"
                        }
                    }
                ],
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('appGW_publicIpAddressName'))]"
                            }
                        }
                    },
                    {
                        "name": "gateway-private",
                        "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort",
                        "properties": {
                            "Port": 80
                        }
                    },
                    {
                        "name": "appGatewayFrontendPort443",
                        "properties": {
                            "Port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "properties": {
                            "BackendAddresses": [
                                {
                                    "ipAddress": "[parameters('appGW_backendIPAddresses')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "CookieBasedAffinity": "Disabled",
                            "requestTimeout": 600,
                            "cookieBasedAffinity": "Disabled",
                            "hostName": null,
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "probe": {
                                "id": "[variables('probeid')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
                            },
                            "Protocol": "Http",
                            "SslCertificate": null
                        }
                    },
                    {
                        "name": "appGatewayHttpsListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort443')]"
                            },
                            "Protocol": "Https",
                            "SslCertificate": {
                                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
                            }
                        }
                    }
                ],
                "redirectConfigurations": [
                    {
                        "name": "FrontEnd-HTTP2HTTPS",
                        "properties": {
                            "redirectType": "Permanent",
                            "targetListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGW_Name')), '/httpListeners/appGatewayHttpsListener')]"
                            },
                            "includePath": true,
                            "includeQueryString": true
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "FrontEnd-Redirect-HTTP-to-HTTPS",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGW_Name')), '/httpListeners/appGatewayHttpListener')]"
                            },
                            "redirectConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGW_Name')), '/redirectConfigurations/FrontEnd-HTTP2HTTPS')]"
                            }
                        }
                    },
                    {
                        "Name": "rule1",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "sslPolicy": {
                    "policyType": "Custom",
                    "minProtocolVersion": "TLSv1_2",
                    "cipherSuites": [
                        "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                        "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                        "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
                    ]
                },
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Detection",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0",
                    "disabledRuleGroups": [],
                    "exclusions": [],
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "probes": [
                    {
                        "name": "nginx-probe",
                        "properties": {
                            "protocol": "Http",
                            "host": "nginx-probe",
                            "path": "/api/v1/status",
                            "interval": 30,
                            "timeout": 300,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "minServers": 0,
                            "match": {
                                "body": "",
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/applicationGateways/probes"
                    }
                ],
                "enableHttp2": false
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('appGW_publicIpAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[parameters('appGW_publicIpAddressName')]",
            "apiVersion": "2018-08-01",
            "location": "[resourcegroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('appGW_allocationMethod')]",
                "idleTimeoutInMinutes": "[parameters('appGW_idleTimeoutInMinutes')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('appGW_domainNameLabel')]",
                    "fqdn": "[concat(parameters('appGW_domainNameLabel'),'.northeurope.cloudapp.azure.com')]"
                }
            }
        }
    ]
}
